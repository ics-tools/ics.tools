# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test files
        run: |
          for s in $(find -type f -name "*.ics" -print); do
            echo "::group::Test file $s";
            echo "Make http request"
            response=$(curl -sS -F "jform[task]=validate" -F "jform[ical_file]=@$s" "https://icalendar.org/validator.html?json=1")
            echo "::debug::$response"
            error_count=$(echo "$response" | jq '.totals.errors')
            warning_count=$(echo "$response" | jq '.totals.warnings')
            echo "File has $error_count errors and $warning_count warnings."
            if [ "$error_count" -gt "0" ]; then
              echo "::error title=Error found::$(echo "$response" | jq -r '.errors | map(.message) | join("\n")')"
              exit 1
            fi
            if [ "$warning_count" -gt "0" ]; then
              echo "::warning title=Warning found::$(echo "$response" | jq -r '.warnings | map(.message) | join("\n")')"
              exit 2
            fi
            echo "::endgroup::"
          done

  build:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.X"
      - name: Build page
        run: bash generate_page.sh
        working-directory: scripts
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./page
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
